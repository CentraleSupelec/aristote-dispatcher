apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vllm.fullname" . }}-sender
  {{- with .Values.sender.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.sender.replicaCount }}
  selector:
    matchLabels:
      {{- include "vllm.selectorLabels.sender" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.sender.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vllm.selectorLabels.sender" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.sender.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-sender
          securityContext:
            {{- toYaml .Values.sender.securityContext | nindent 12 }}
          image: {{ .Values.sender.image.repository }}:{{ .Values.sender.image.tag }}
          imagePullPolicy: {{ .Values.sender.image.pullPolicy | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.sender.port }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: /health/startup
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health/liveness
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health/readiness
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          env:
            - name: WORKER_URL
              value: {{ include "vllm.fullname" .}}-consumer
            - name: WORKER_SERVICE
              value: {{ .Release.Name }}-consumer
            - name: WORKER_PORT
              value: {{ .Values.inferenceserver.port | quote}}
            - name: WORKER_NUM
              value: "{{ .Values.sender.replicaCount }}"
            - name: RPC_RECONNECT_ATTEMPTS
              value: 10
            {{- if .Values.rabbitmq.internal }}
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq-default-user
                  key: host
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq-default-user
                  key: username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-rabbitmq-default-user
                  key: password
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_MANAGEMENT_PORT
              value: "15672"
            {{ else }}
            - name: RABBITMQ_HOST
              value: {{ .Values.rabbitmq.host | quote}}
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: {{ if eq .Values.rabbitmq.existingSecret ""}} rabbitmq-secret {{else}} {{ .Values.rabbitmq.existingSecret }} {{end}}
                  key: {{ if .Values.rabbitmq.secretKeyOverride.enabled }} {{ .Values.rabbitmq.secretKeyOverride.username }} {{ else }} username {{ end }}
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if eq .Values.rabbitmq.existingSecret ""}} rabbitmq-secret {{else}} {{ .Values.rabbitmq.existingSecret }} {{end}}
                  key: {{ if .Values.rabbitmq.secretKeyOverride.enabled }} {{ .Values.rabbitmq.secretKeyOverride.password }} {{ else }} password {{ end }}
            - name: RABBITMQ_PORT
              value: {{ .Values.rabbitmq.port | quote }}
            - name: RABBITMQ_MANAGEMENT_PORT
              value: {{ .Values.rabbitmq.managementPort | quote }}
            {{ end }}
            - name: DATABASE_TYPE
              value: {{ .Values.database.type | quote }}
            {{ if .Values.database.internal }}
            - name: DB_HOST
              value: {{ .Release.Name }}-mysql
            {{ else }}
            - name: DB_HOST
              value: {{ .Values.database.host | quote }}
            {{ end }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ if eq .Values.database.existingSecret ""}} database-secret {{else}} {{ .Values.database.existingSecret }} {{end}}
                  key: {{ if .Values.database.secretKeyOverride.enabled }} {{ .Values.database.secretKeyOverride.username }} {{ else }} username {{ end }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if eq .Values.database.existingSecret ""}} database-secret {{else}} {{ .Values.database.existingSecret }} {{end}}
                  key: {{ if .Values.database.secretKeyOverride.enabled }} {{ .Values.database.secretKeyOverride.password }} {{ else }} password {{ end }}
            - name: DB_DATABASE
              value: {{ .Values.database.auth.database | quote }}
            - name: DB_PORT
              value: {{ .Values.database.port | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.sender.logLevel | quote }}
            {{- with .Values.sender.env }}
              {{ toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.sender.resources | nindent 12 }}
      {{- with .Values.sender.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.sender.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
