{{ $val := .Values }}
{{ $file := . }}
{{- range .Values.models }}
{{- if .pvc.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $file.Release.Name }}-model-storage-{{ .name }}
  annotations:
    "helm.sh/resource-policy": keep
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .pvc.storageSize }}
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "vllm.fullname" $file }}-consumer-{{ .name }}
  {{- with $val.consumer.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}   
  labels:
    {{- include "vllm.labels.consumer" $file | nindent 4 }}
spec:
  replicas: {{ .replicaCount }}
  serviceName: {{ $file.Release.Name }}-consumer-{{ .name }}
  selector:
    matchLabels:
      {{- include "vllm.selectorLabels.consumer" $file | nindent 6 }}
  template:
    metadata:
      {{- with $val.consumer.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vllm.selectorLabels.consumer" $file | nindent 8 }}
    spec:
      {{- with $val.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml $val.consumer.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .name }}-vllm
          securityContext:
            {{- toYaml $val.inferenceserver.securityContext | nindent 12 }}
          image: "{{ $val.inferenceserver.image.repository }}:{{ $val.inferenceserver.image.tag }}"
          imagePullPolicy: {{ $val.inferenceserver.image.pullPolicy | quote }}
          command:
          - python3
          - -m
          - vllm.entrypoints.openai.api_server
          - --model
          - {{ .model | quote }}
          - --download-dir
          - "/model"
          {{- if not (eq .servedModelName "")}}
          - --served_model_name={{ .servedModelName }}
          {{- end }}
          {{- if not (eq .quantization "")}}
          - --quantization={{ .quantization }}
          {{- end }}
          {{- if not (eq .dtype "")}}
          - --dtype={{ .dtype }}
          {{- end }}
          {{- if not (eq .gpuMemoryUtilization "")}}
          - --gpu-memory-utilization={{ .gpuMemoryUtilization }}
          {{- end }}
          {{- if and .ropeScaling .ropeScaling.enabled }}
          - --rope-scaling={{ .ropeScaling.jsonConfiguration }}
          {{- if (not (eq .ropeScaling.theta "")) }}
          - --rope-theta={{ .ropeScaling.theta }}
          {{- end }}
          {{- end }}
          - --trust-remote-code
          ports:
            - name: http
              containerPort: {{ $val.inferenceserver.port }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 20
            periodSeconds: 6
            # Allow for up to 10 minutes of startup time
            failureThreshold: 100
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            {{- toYaml $val.inferenceserver.resources | nindent 12 }}
          env:
            - name: PORT 
              value: {{ $val.inferenceserver.port | quote }}
            - name: HF_TOKEN
              value: {{ $val.huggingface_token | quote }}
            {{- with $val.inferenceserver.env }}
            {{ toYaml . | nindent 12 }}
            {{- end }}
          {{- if .pvc.enabled }}
          volumeMounts:
            - name: model-storage
              mountPath: /model
          {{- end }}
        - name: {{ .name }}-consumer
          securityContext:
            {{- toYaml $val.consumer.securityContext | nindent 12 }}
          image: "{{ $val.consumer.image.repository }}:{{ $val.consumer.image.tag }}"
          imagePullPolicy: {{ $val.consumer.image.pullPolicy | quote }}
          {{ if $val.consumer.useProbes }}
          ports:
            - name: http
              containerPort: {{ $val.consumer.probePort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: {{ $val.consumer.probePort }}
            initialDelaySeconds: 2
            periodSeconds: 30
            failureThreshold: 5
          {{ else }}
          livenessProbe:
            exec:
              command:
              - sh
            initialDelaySeconds: 2
            periodSeconds: 15
            failureThreshold: 5
          {{ end }}
          resources:
            {{- toYaml $val.consumer.resources | nindent 12 }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: SERVICE_NAME
              value: {{ $file.Release.Name }}-consumer-{{ .name }}
            - name: TARGET_PORT
              value: {{ $val.inferenceserver.port | quote }}
            - name: SUFFIX
              value: ""
            - name: USE_PROBES
              {{- if hasKey $val.consumer "probe" }}
              {{- if $val.consumer.probe.enabled }}
              value: "1"
              {{- else }}
              value: "0"
              {{- end }}
              {{- else }}
              value: "0"
              {{- end }}
            {{- if hasKey $val.consumer "probe" }}
            {{- if $val.consumer.probe.enabled }}
            - name: PROBE_PORT
              value: {{ $val.consumer.probe.port | quote }}
            {{- end }}
            {{- end }}
            - name: RPC_RECONNECT_ATTEMPTS
              {{ if $val.consumer.rpcReconnectAttempts }}
              value: {{ $val.consumer.rpcReconnectAttempts | quote }}
              {{ else }}
              value: "10"
              {{ end }}
            - name: RPC_QUEUE_EXPIRATION
              {{ if $val.consumer.rpcQueueExpiration }}
              value: {{ $val.consumer.rpcQueueExpiration | quote }}
              {{ else }}
              value: "30000"
              {{ end }}
            {{- if $val.rabbitmq.internal }}
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ $file.Release.Name }}-rabbitmq-default-user
                  key: host
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $file.Release.Name }}-rabbitmq-default-user
                  key: username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $file.Release.Name }}-rabbitmq-default-user
                  key: password
            {{ else }}
            - name: RABBITMQ_HOST
              value: {{ $val.rabbitmq.host | quote}}
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: {{ if eq $val.rabbitmq.existingSecret ""}}rabbitmq-secret {{else}} {{ $val.rabbitmq.existingSecret }} {{end}}
                  key: {{ if $val.rabbitmq.secretKeyOverride }} {{ $val.rabbitmq.secretKeyOverride.username }} {{ else }} username {{ end }}
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if eq $val.rabbitmq.existingSecret ""}}rabbitmq-secret {{else}} {{ $val.rabbitmq.existingSecret }} {{end}}
                  key: {{ if $val.rabbitmq.secretKeyOverride }} {{ $val.rabbitmq.secretKeyOverride.password }} {{ else }} password {{ end }}
            {{ end }}
            - name: RABBITMQ_PORT
              value: {{ $val.rabbitmq.port | quote }}
            - name: LOG_LEVEL
              value: {{ $val.consumer.logLevel | quote }}
            - name: MODEL
              value: {{ .model | quote }}
            {{- with $val.consumer.env }}
            {{ toYaml . | nindent 12 }}
            {{- end }}
      {{- if .pvc.enabled }}
      volumes:
        - name: model-storage
          persistentVolumeClaim:
            claimName: {{ $file.Release.Name }}-model-storage-{{ .name }}
      {{- end }}
      {{- with $val.consumer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $val.consumer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $val.consumer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- end }}
