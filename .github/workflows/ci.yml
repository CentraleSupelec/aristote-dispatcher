name: ci

on:
  push:
    branches:
      - master
      - main

permissions:
  contents: write

jobs:

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: echo "cache_id=$(date --utc '+%V')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-
      - run: pip install mkdocs-material
      - run: mkdocs gh-deploy --force

  lint-and-format:
    runs-on: ubuntu-latest
    container: python:3.11-slim 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          apt-get update && apt-get install -y --no-install-recommends \
            build-essential \
            && rm -rf /var/lib/apt/lists/*

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r workers/sender/requirements.txt
          pip install -r workers/consumer/requirements.txt
          pip install .[dev]

      - name: Run black
        run: |
          black --check --verbose .

      - name: Run isort
        run: |
          isort --profile black --filter-files -c -v .

      - name: Run pylint with custom exit code handling
        run: |
          pylint workers/sender workers/consumer
          exit_code=$?
          if [ $exit_code -eq 1 ] || [ $exit_code -eq 2 ] || [ $exit_code -eq 3 ]; then
            echo "pylint found fatal errors or errors. Failing the job."
            exit 1
          else
            echo "pylint found only warnings, refactors, or conventions. Allowing the job to pass."
            exit 0
          fi
